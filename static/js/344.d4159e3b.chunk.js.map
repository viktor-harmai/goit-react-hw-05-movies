{"version":3,"file":"static/js/344.d4159e3b.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieItem/MovieItem.styled.js","components/MovieGallery/MovieItem/MovieItem.js","components/MovieGallery/MovieGallery.styled.js","components/MovieGallery/MovieGallery.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  outline: none;\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc ((100% - 4 * 30px) / 4);\n  margin-left: 30px;\n  margin-bottom: 30px;\n  border-radius: 10px;\n  overflow: hidden;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n    box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n    -webkit-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n    -moz-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 360px;\n  height: 450px;\n  object-fit: cover;\n  transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 4px;\n  &:hover {\n    transform: scale(1.02);\n    cursor: pointer;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  padding: 8px;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  color: black;\n  font-size: 12px;\n  font-weight: 700;\n`;\n\nexport const Vote = styled.p`\n  color: black;\n  font-size: 15px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { StyledLink, Item, Image, Info, Title, Vote } from './MovieItem.styled';\n\nconst MovieItem = ({ id, title, src, vote }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <div>\n        <StyledLink\n          to={`/movies/${id}`}\n          state={{\n            from: location.pathname + location.search,\n          }}\n        >\n          <Image src={src} alt={title} />\n          <Info>\n            <Title>{title.toUpperCase()}</Title>\n            <Vote>{vote}</Vote>\n          </Info>\n        </StyledLink>\n      </div>\n    </Item>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\n// export const MovieList = styled.ul`\n//   list-style: none;\n//   display: flex;\n//   flex-wrap: wrap;\n//   align-items: center;\n//   justify-content: center;\n//   padding-right: 100px;\n//   padding-left: 100px;\n//   margin-left: -30px;\n// `;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 16px;\n  margin: 0px auto;\n  padding: 0px;\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport MovieItem from './MovieItem';\nimport { MovieList } from './MovieGallery.styled';\n\nconst MovieGallery = ({ movies }) => {\n  return (\n    <MovieList>\n      {movies.map(({ id, title, poster_path, vote_average }) => {\n        const base_url = 'https://image.tmdb.org/t/p/w500';\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            src={base_url + poster_path}\n            title={title}\n            vote={vote_average}\n          >\n            {title}\n          </MovieItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default MovieGallery;\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  padding-top: 50px;\n\n  text-align: center;\n  font-size: 30px;\n\n  color: red;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n\n  /* outline: 1px solid tomato; */\n`;\n\nexport const Title = styled.h1`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 40px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\nimport Notification from 'components/Notification/Notification';\nimport { Container, Title } from './Home.styled';\nimport * as API from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await API.getTrending();\n      setMovies(response);\n    } catch {\n      const message = 'Oops, something went wrong ...';\n      setError(message);\n    }\n  };\n\n  return (\n    <main>\n      {error ? (\n        <Notification message={error} />\n      ) : (\n        <Container>\n          <Title>Trending today</Title>\n          <MovieGallery movies={movies} />\n        </Container>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'bcf36fb2338735ea4909e57693c71e92';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const baseUrl = 'https://image.tmdb.org/t/p/w500';\nexport const defaultUrl =\n  'https://upload.wikimedia.org/wikipedia/commons/6/6c/No_image_3x4.svg';\n\n// запрас на список самых популярных фильмов на сегодня для создания коллекции\n// на главной странице.\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  const { results } = data;\n  // console.log(results);\n  return results;\n};\n\n//запрос о полной информации о фильме для страницы кинофильма\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(data);\n  return data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  const { cast } = data;\n  // console.log(cast);\n  return cast;\n}\n\n//запрос обзоров для страницы кинофильма\n\nexport async function getReview(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  const { results } = data;\n  // console.log(results);\n  return results;\n}\n\n// запрос на поиск кинофильма по ключевому слову на странице фильмов\n//\nexport async function getMoviesQuery(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  const { results } = data;\n  // console.log(results);\n  return results;\n}\n"],"names":["StyledLink","styled","Link","Item","Image","Info","Title","Vote","id","title","src","vote","location","useLocation","to","state","from","pathname","search","alt","toUpperCase","MovieList","movies","map","poster_path","vote_average","Message","message","Container","useState","setMovies","error","setError","useEffect","fetchData","API","response","Notification","MovieGallery","API_KEY","BASE_URL","baseUrl","defaultUrl","getTrending","axios","data","results","getDetails","getMovieCast","cast","getReview","getMoviesQuery","query"],"sourceRoot":""}