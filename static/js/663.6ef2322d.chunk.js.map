{"version":3,"file":"static/js/663.6ef2322d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const CastItem = styled.li``;\n\nexport const CardCast = styled.div`\n  background-color: var(--primary-white-color);\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-radius: 0px 0px 4px 4px;\n`;\n\nexport const CardThump = styled.div`\n  border-radius: 4px 4px 0 0;\n  object-fit: cover;\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px 4px 0 0;\n  object-fit: contain;\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n\n  padding: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/api';\n\nimport Notification from 'components/Notification';\n\nimport {\n  CastList,\n  CastItem,\n  CardCast,\n  CardThump,\n  CardContent,\n  Image,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [castLoad, setcastLoad] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchData(movieId);\n  }, [movieId]);\n\n  const fetchData = async id => {\n    try {\n      const response = await API.getMovieCast(id);\n      setCasts(response);\n      setcastLoad(true);\n    } catch {\n      const message = 'Oops, something went wrong ...';\n      setError(message);\n    }\n  };\n\n  if (casts.length === 0 && castLoad) {\n    const message = 'We dont have any information about cast of this movie';\n    return <Notification message={message} />;\n  }\n\n  return (\n    <>\n      {error ? (\n        <Notification message={error} />\n      ) : (\n        <CastList>\n          {casts.map(({ id, character, name, profile_path }) => {\n            return (\n              <CastItem key={id}>\n                <CardCast>\n                  <CardThump>\n                    {\n                      <Image\n                        src={\n                          profile_path\n                            ? API.baseUrl + profile_path\n                            : API.defaultUrl\n                        }\n                        alt={name}\n                        width=\"200\"\n                        height=\"200\"\n                      />\n                    }\n                  </CardThump>\n\n                  <CardContent>\n                    <p>{character}</p>\n                    <p>{name}</p>\n                  </CardContent>\n                </CardCast>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  padding-top: 50px;\n\n  text-align: center;\n  font-size: 30px;\n\n  color: red;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'bcf36fb2338735ea4909e57693c71e92';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const baseUrl = 'https://image.tmdb.org/t/p/w500';\nexport const defaultUrl =\n  'https://upload.wikimedia.org/wikipedia/commons/6/6c/No_image_3x4.svg';\n\n// запрас на список самых популярных фильмов на сегодня для создания коллекции\n// на главной странице.\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  const { results } = data;\n  // console.log(results);\n  return results;\n};\n\n//запрос о полной информации о фильме для страницы кинофильма\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(data);\n  return data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  const { cast } = data;\n  // console.log(cast);\n  return cast;\n}\n\n//запрос обзоров для страницы кинофильма\n\nexport async function getReview(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  const { results } = data;\n  // console.log(results);\n  return results;\n}\n\n// запрос на поиск кинофильма по ключевому слову на странице фильмов\n//\nexport async function getMoviesQuery(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  const { results } = data;\n  // console.log(results);\n  return results;\n}\n"],"names":["CastList","styled","CastItem","CardCast","CardThump","Image","CardContent","useState","casts","setCasts","castLoad","setcastLoad","error","setError","movieId","useParams","useEffect","fetchData","id","API","response","length","Notification","message","map","character","name","profile_path","src","alt","width","height","Message","API_KEY","BASE_URL","baseUrl","defaultUrl","getTrending","axios","data","results","getDetails","getMovieCast","cast","getReview","getMoviesQuery","query"],"sourceRoot":""}